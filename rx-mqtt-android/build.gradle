buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.2'
        classpath 'com.novoda:bintray-release:0.3.4'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
    maven { url "https://repo.eclipse.org/content/repositories/paho-releases/" }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.3"
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 24
        versionCode 1
        versionName "1.0.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    //compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0'
    compile 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.0'
    compile 'io.reactivex.rxjava2:rxjava:2.0.1'

    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:robolectric:3.1.4'
}

apply from: 'jacoco-coveralls.gradle'
//apply from: 'jacoco-android-coveralls.gradle'

apply plugin: 'com.novoda.bintray-release'

def getRepositoryUsername() {
    return hasProperty('BINTRAY_USER') ? BINTRAY_USER : ""
}

def getRepositoryPassword() {
    return hasProperty('BINTRAY_KEY') ? BINTRAY_KEY : ""
}

publish {
    userOrg = 'yongjhih'
    groupId = 'com.github.yongjhih'
    artifactId = 'rx-mqtt-android'
    publishVersion = '1.0.0'
    desc = 'rx-mqtt-android'
    website = 'https://github.com/yongjhih/rx-mqtt-android'
    bintrayUser = getRepositoryUsername()
    bintrayKey = getRepositoryPassword()
    dryRun = false
}

//group = 'com.github.yongjhih'
apply plugin: 'com.github.dcendents.android-maven'

apply from: 'javadoc.gradle'

tasks.withType(Test) {
  testLogging {
    exceptionFormat "full"
    //events "passed", "skipped", "failed"
    events "passed", "skipped", "failed", "standardOut", "standardError"
    showStandardStreams = true
  }
}

